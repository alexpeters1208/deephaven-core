% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/table_handle_wrapper.R
\docType{class}
\name{TableHandle}
\alias{TableHandle}
\title{Deephaven TableHandles}
\description{
Deephaven TableHandles are references to tables living on a Deephaven server. They provide an
interface for interacting with tables on the server.
}
\examples{

# connect to the Deephaven server running on "localhost:10000" using anonymous 'default' authentication
client_options <- ClientOptions$new()
client <- Client$new(target="localhost:10000", client_options=client_options)

# open a table that already exists on the server
new_table_handle1 <- client$open_table("table_on_the_server")

# convert the Deephaven table to an R data frame
new_data_frame <- new_table_handle1$to_data_frame()

# modify new data frame in R
new_data_frame$New_Int_Col <- c(1, 2, 3, 4, 5)
new_data_frame$New_String_Col <- c("I", "am", "a", "string", "column")

# push new data frame to the server and name it "new_table"
new_table_handle2 <- client$import_table(new_data_frame)
new_table_handle2$bind_to_variable("new_table")
}
\section{Methods}{
\subsection{Public methods}{
\itemize{
\item \href{#method-TableHandle-new}{\code{TableHandle$new()}}
\item \href{#method-TableHandle-is_static}{\code{TableHandle$is_static()}}
\item \href{#method-TableHandle-nrow}{\code{TableHandle$nrow()}}
\item \href{#method-TableHandle-bind_to_variable}{\code{TableHandle$bind_to_variable()}}
\item \href{#method-TableHandle-to_arrow_record_batch_stream_reader}{\code{TableHandle$to_arrow_record_batch_stream_reader()}}
\item \href{#method-TableHandle-to_arrow_table}{\code{TableHandle$to_arrow_table()}}
\item \href{#method-TableHandle-to_tibble}{\code{TableHandle$to_tibble()}}
\item \href{#method-TableHandle-to_data_frame}{\code{TableHandle$to_data_frame()}}
\item \href{#method-TableHandle-select}{\code{TableHandle$select()}}
\item \href{#method-TableHandle-view}{\code{TableHandle$view()}}
\item \href{#method-TableHandle-drop_columns}{\code{TableHandle$drop_columns()}}
\item \href{#method-TableHandle-update}{\code{TableHandle$update()}}
\item \href{#method-TableHandle-update_view}{\code{TableHandle$update_view()}}
\item \href{#method-TableHandle-where}{\code{TableHandle$where()}}
\item \href{#method-TableHandle-agg_by}{\code{TableHandle$agg_by()}}
\item \href{#method-TableHandle-min_by}{\code{TableHandle$min_by()}}
\item \href{#method-TableHandle-max_by}{\code{TableHandle$max_by()}}
\item \href{#method-TableHandle-sum_by}{\code{TableHandle$sum_by()}}
\item \href{#method-TableHandle-abs_sum_by}{\code{TableHandle$abs_sum_by()}}
\item \href{#method-TableHandle-avg_by}{\code{TableHandle$avg_by()}}
\item \href{#method-TableHandle-w_avg_by}{\code{TableHandle$w_avg_by()}}
\item \href{#method-TableHandle-var_by}{\code{TableHandle$var_by()}}
\item \href{#method-TableHandle-std_by}{\code{TableHandle$std_by()}}
\item \href{#method-TableHandle-first_by}{\code{TableHandle$first_by()}}
\item \href{#method-TableHandle-last_by}{\code{TableHandle$last_by()}}
\item \href{#method-TableHandle-median_by}{\code{TableHandle$median_by()}}
\item \href{#method-TableHandle-percentile_by}{\code{TableHandle$percentile_by()}}
\item \href{#method-TableHandle-count_by}{\code{TableHandle$count_by()}}
\item \href{#method-TableHandle-head_by}{\code{TableHandle$head_by()}}
\item \href{#method-TableHandle-tail_by}{\code{TableHandle$tail_by()}}
\item \href{#method-TableHandle-cross_join}{\code{TableHandle$cross_join()}}
\item \href{#method-TableHandle-natural_join}{\code{TableHandle$natural_join()}}
\item \href{#method-TableHandle-exact_join}{\code{TableHandle$exact_join()}}
\item \href{#method-TableHandle-head}{\code{TableHandle$head()}}
\item \href{#method-TableHandle-tail}{\code{TableHandle$tail()}}
\item \href{#method-TableHandle-ungroup}{\code{TableHandle$ungroup()}}
\item \href{#method-TableHandle-sort}{\code{TableHandle$sort()}}
\item \href{#method-TableHandle-merge}{\code{TableHandle$merge()}}
\item \href{#method-TableHandle-clone}{\code{TableHandle$clone()}}
}
}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-TableHandle-new"></a>}}
\if{latex}{\out{\hypertarget{method-TableHandle-new}{}}}
\subsection{Method \code{new()}}{
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{TableHandle$new(table_handle)}\if{html}{\out{</div>}}
}

}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-TableHandle-is_static"></a>}}
\if{latex}{\out{\hypertarget{method-TableHandle-is_static}{}}}
\subsection{Method \code{is_static()}}{
Whether the table referenced by this TableHandle is static or not.
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{TableHandle$is_static()}\if{html}{\out{</div>}}
}

\subsection{Returns}{
TRUE if the table is static, or FALSE if the table is ticking.
}
}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-TableHandle-nrow"></a>}}
\if{latex}{\out{\hypertarget{method-TableHandle-nrow}{}}}
\subsection{Method \code{nrow()}}{
Number of rows in the table referenced by this TableHandle, currently only implemented for static tables.
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{TableHandle$nrow()}\if{html}{\out{</div>}}
}

\subsection{Returns}{
The number of rows in the table.
}
}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-TableHandle-bind_to_variable"></a>}}
\if{latex}{\out{\hypertarget{method-TableHandle-bind_to_variable}{}}}
\subsection{Method \code{bind_to_variable()}}{
Binds the table referenced by this TableHandle to a variable on the server,
enabling it to be accessed by that name from any Deephaven API.
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{TableHandle$bind_to_variable(name)}\if{html}{\out{</div>}}
}

\subsection{Arguments}{
\if{html}{\out{<div class="arguments">}}
\describe{
\item{\code{name}}{Name for this table on the server.}
}
\if{html}{\out{</div>}}
}
}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-TableHandle-to_arrow_record_batch_stream_reader"></a>}}
\if{latex}{\out{\hypertarget{method-TableHandle-to_arrow_record_batch_stream_reader}{}}}
\subsection{Method \code{to_arrow_record_batch_stream_reader()}}{
Imports the table referenced by this TableHandle into an Arrow RecordBatchStreamReader.
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{TableHandle$to_arrow_record_batch_stream_reader()}\if{html}{\out{</div>}}
}

\subsection{Returns}{
A RecordBatchStreamReader containing the data from the table referenced by this TableHandle.
}
}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-TableHandle-to_arrow_table"></a>}}
\if{latex}{\out{\hypertarget{method-TableHandle-to_arrow_table}{}}}
\subsection{Method \code{to_arrow_table()}}{
Imports the table referenced by this TableHandle into an Arrow Table.
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{TableHandle$to_arrow_table()}\if{html}{\out{</div>}}
}

\subsection{Returns}{
A Table containing the data from the table referenced by this TableHandle.
}
}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-TableHandle-to_tibble"></a>}}
\if{latex}{\out{\hypertarget{method-TableHandle-to_tibble}{}}}
\subsection{Method \code{to_tibble()}}{
Imports the table referenced by this TableHandle into a dplyr Tibble.
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{TableHandle$to_tibble()}\if{html}{\out{</div>}}
}

\subsection{Returns}{
A Tibble containing the data from the table referenced by this TableHandle.
}
}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-TableHandle-to_data_frame"></a>}}
\if{latex}{\out{\hypertarget{method-TableHandle-to_data_frame}{}}}
\subsection{Method \code{to_data_frame()}}{
Imports the table referenced by this TableHandle into an R Data Frame.
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{TableHandle$to_data_frame()}\if{html}{\out{</div>}}
}

\subsection{Returns}{
A Data Frame containing the data from the table referenced by this TableHandle.
}
}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-TableHandle-select"></a>}}
\if{latex}{\out{\hypertarget{method-TableHandle-select}{}}}
\subsection{Method \code{select()}}{
Select columns from a table. The columns can be column names or formulas like
"NewCol = A + 12". See the Deephaven documentation for the difference between "select" and "view".
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{TableHandle$select(columns)}\if{html}{\out{</div>}}
}

\subsection{Arguments}{
\if{html}{\out{<div class="arguments">}}
\describe{
\item{\code{columns}}{The columns to select.}
}
\if{html}{\out{</div>}}
}
\subsection{Returns}{
A TableHandle referencing the new table.
}
}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-TableHandle-view"></a>}}
\if{latex}{\out{\hypertarget{method-TableHandle-view}{}}}
\subsection{Method \code{view()}}{
View columns from a table. The columns can be column names or formulas like
"NewCol = A + 12". See the Deephaven documentation for the difference between select() and view().
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{TableHandle$view(columns)}\if{html}{\out{</div>}}
}

\subsection{Arguments}{
\if{html}{\out{<div class="arguments">}}
\describe{
\item{\code{columns}}{The columns to view.}
}
\if{html}{\out{</div>}}
}
\subsection{Returns}{
A TableHandle referencing the new table.
}
}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-TableHandle-drop_columns"></a>}}
\if{latex}{\out{\hypertarget{method-TableHandle-drop_columns}{}}}
\subsection{Method \code{drop_columns()}}{
Creates a new table from this table where the specified columns have been excluded.
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{TableHandle$drop_columns(columns)}\if{html}{\out{</div>}}
}

\subsection{Arguments}{
\if{html}{\out{<div class="arguments">}}
\describe{
\item{\code{columns}}{The columns to exclude.}
}
\if{html}{\out{</div>}}
}
\subsection{Returns}{
A TableHandle referencing the new table.
}
}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-TableHandle-update"></a>}}
\if{latex}{\out{\hypertarget{method-TableHandle-update}{}}}
\subsection{Method \code{update()}}{
Creates a new table from this table, but including the additional specified columns.
See the Deephaven documentation for the difference between update() and updateView().
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{TableHandle$update(columns)}\if{html}{\out{</div>}}
}

\subsection{Arguments}{
\if{html}{\out{<div class="arguments">}}
\describe{
\item{\code{columns}}{The columns to add. For example, {"X = A + 5", "Y = X * 2"}.}
}
\if{html}{\out{</div>}}
}
\subsection{Returns}{
A TableHandle referencing the new table.
}
}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-TableHandle-update_view"></a>}}
\if{latex}{\out{\hypertarget{method-TableHandle-update_view}{}}}
\subsection{Method \code{update_view()}}{
Creates a new view from this table, but including the additional specified columns.
See the Deephaven documentation for the difference between update() and updateView().
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{TableHandle$update_view(columns)}\if{html}{\out{</div>}}
}

\subsection{Arguments}{
\if{html}{\out{<div class="arguments">}}
\describe{
\item{\code{columns}}{The columns to add. For example, {"X = A + 5", "Y = X * 2"}.}
}
\if{html}{\out{</div>}}
}
\subsection{Returns}{
A TableHandle referencing the new table.
}
}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-TableHandle-where"></a>}}
\if{latex}{\out{\hypertarget{method-TableHandle-where}{}}}
\subsection{Method \code{where()}}{
Creates a new table from this table, filtered by condition. Consult the Deephaven
documentation for more information about valid conditions.
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{TableHandle$where(condition)}\if{html}{\out{</div>}}
}

\subsection{Arguments}{
\if{html}{\out{<div class="arguments">}}
\describe{
\item{\code{condition}}{A Deephaven boolean expression such as "Price > 100" or "Col3 == Col1 * Col2".}
}
\if{html}{\out{</div>}}
}
\subsection{Returns}{
A TableHandle referencing the new table.
}
}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-TableHandle-agg_by"></a>}}
\if{latex}{\out{\hypertarget{method-TableHandle-agg_by}{}}}
\subsection{Method \code{agg_by()}}{
Creates a new table from this table with one or more aggregations applied to the specified columns.
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{TableHandle$agg_by(aggregations)}\if{html}{\out{</div>}}
}

\subsection{Arguments}{
\if{html}{\out{<div class="arguments">}}
\describe{
\item{\code{aggregations}}{Deephaven Aggregations to apply to this table.}
}
\if{html}{\out{</div>}}
}
\subsection{Returns}{
A TableHandle referencing the new table.
}
}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-TableHandle-min_by"></a>}}
\if{latex}{\out{\hypertarget{method-TableHandle-min_by}{}}}
\subsection{Method \code{min_by()}}{
Creates a new table from this table, grouped by columns, with the "min" aggregate operation
applied to the remaining columns.
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{TableHandle$min_by(columns)}\if{html}{\out{</div>}}
}

\subsection{Arguments}{
\if{html}{\out{<div class="arguments">}}
\describe{
\item{\code{columns}}{Columns to group by.}
}
\if{html}{\out{</div>}}
}
\subsection{Returns}{
A TableHandle referencing the new table.
}
}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-TableHandle-max_by"></a>}}
\if{latex}{\out{\hypertarget{method-TableHandle-max_by}{}}}
\subsection{Method \code{max_by()}}{
Creates a new table from this table, grouped by columns, with the "max" aggregate operation
applied to the remaining columns.
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{TableHandle$max_by(columns)}\if{html}{\out{</div>}}
}

\subsection{Arguments}{
\if{html}{\out{<div class="arguments">}}
\describe{
\item{\code{columns}}{Columns to group by.}
}
\if{html}{\out{</div>}}
}
\subsection{Returns}{
A TableHandle referencing the new table.
}
}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-TableHandle-sum_by"></a>}}
\if{latex}{\out{\hypertarget{method-TableHandle-sum_by}{}}}
\subsection{Method \code{sum_by()}}{
Creates a new table from this table, grouped by columns, with the "sum" aggregate operation
applied to the remaining columns.
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{TableHandle$sum_by(columns)}\if{html}{\out{</div>}}
}

\subsection{Arguments}{
\if{html}{\out{<div class="arguments">}}
\describe{
\item{\code{columns}}{Columns to group by.}
}
\if{html}{\out{</div>}}
}
\subsection{Returns}{
A TableHandle referencing the new table.
}
}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-TableHandle-abs_sum_by"></a>}}
\if{latex}{\out{\hypertarget{method-TableHandle-abs_sum_by}{}}}
\subsection{Method \code{abs_sum_by()}}{
Creates a new table from this table, grouped by columns, with the "absSum" aggregate operation
applied to the remaining columns.
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{TableHandle$abs_sum_by(columns)}\if{html}{\out{</div>}}
}

\subsection{Arguments}{
\if{html}{\out{<div class="arguments">}}
\describe{
\item{\code{columns}}{Columns to group by.}
}
\if{html}{\out{</div>}}
}
\subsection{Returns}{
A TableHandle referencing the new table.
}
}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-TableHandle-avg_by"></a>}}
\if{latex}{\out{\hypertarget{method-TableHandle-avg_by}{}}}
\subsection{Method \code{avg_by()}}{
Creates a new table from this table, grouped by columns, with the "avg" aggregate operation
applied to the remaining columns.
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{TableHandle$avg_by(columns)}\if{html}{\out{</div>}}
}

\subsection{Arguments}{
\if{html}{\out{<div class="arguments">}}
\describe{
\item{\code{columns}}{Columns to group by.}
}
\if{html}{\out{</div>}}
}
\subsection{Returns}{
A TableHandle referencing the new table.
}
}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-TableHandle-w_avg_by"></a>}}
\if{latex}{\out{\hypertarget{method-TableHandle-w_avg_by}{}}}
\subsection{Method \code{w_avg_by()}}{
Creates a new table from this table, grouped by columns, having a new column named by
`weightColumn` containing the weighted average of each group.
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{TableHandle$w_avg_by(weight_column, columns)}\if{html}{\out{</div>}}
}

\subsection{Arguments}{
\if{html}{\out{<div class="arguments">}}
\describe{
\item{\code{weight_column}}{Name of the output column.}

\item{\code{columns}}{Columns to group by.}
}
\if{html}{\out{</div>}}
}
\subsection{Returns}{
A TableHandle referencing the new table.
}
}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-TableHandle-var_by"></a>}}
\if{latex}{\out{\hypertarget{method-TableHandle-var_by}{}}}
\subsection{Method \code{var_by()}}{
Creates a new table from this table, grouped by columns, with the "var" aggregate operation
applied to the remaining columns.
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{TableHandle$var_by(columns)}\if{html}{\out{</div>}}
}

\subsection{Arguments}{
\if{html}{\out{<div class="arguments">}}
\describe{
\item{\code{columns}}{Columns to group by.}
}
\if{html}{\out{</div>}}
}
\subsection{Returns}{
A TableHandle referencing the new table.
}
}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-TableHandle-std_by"></a>}}
\if{latex}{\out{\hypertarget{method-TableHandle-std_by}{}}}
\subsection{Method \code{std_by()}}{
Creates a new table from this table, grouped by columns, with the "std" aggregate operation
applied to the remaining columns.
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{TableHandle$std_by(columns)}\if{html}{\out{</div>}}
}

\subsection{Arguments}{
\if{html}{\out{<div class="arguments">}}
\describe{
\item{\code{columns}}{Columns to group by.}
}
\if{html}{\out{</div>}}
}
\subsection{Returns}{
A TableHandle referencing the new table.
}
}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-TableHandle-first_by"></a>}}
\if{latex}{\out{\hypertarget{method-TableHandle-first_by}{}}}
\subsection{Method \code{first_by()}}{
Creates a new table from this table, grouped by columns, with the "first" aggregate operation
applied to the remaining columns.
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{TableHandle$first_by(columns)}\if{html}{\out{</div>}}
}

\subsection{Arguments}{
\if{html}{\out{<div class="arguments">}}
\describe{
\item{\code{columns}}{Columns to group by.}
}
\if{html}{\out{</div>}}
}
\subsection{Returns}{
A TableHandle referencing the new table.
}
}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-TableHandle-last_by"></a>}}
\if{latex}{\out{\hypertarget{method-TableHandle-last_by}{}}}
\subsection{Method \code{last_by()}}{
Creates a new table from this table, grouped by columns, with the "last" aggregate operation
applied to the remaining columns.
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{TableHandle$last_by(columns)}\if{html}{\out{</div>}}
}

\subsection{Arguments}{
\if{html}{\out{<div class="arguments">}}
\describe{
\item{\code{columns}}{Columns to group by.}
}
\if{html}{\out{</div>}}
}
\subsection{Returns}{
A TableHandle referencing the new table.
}
}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-TableHandle-median_by"></a>}}
\if{latex}{\out{\hypertarget{method-TableHandle-median_by}{}}}
\subsection{Method \code{median_by()}}{
Creates a new table from this table, grouped by columns, with the "median" aggregate operation
applied to the remaining columns.
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{TableHandle$median_by(columns)}\if{html}{\out{</div>}}
}

\subsection{Arguments}{
\if{html}{\out{<div class="arguments">}}
\describe{
\item{\code{columns}}{Columns to group by.}
}
\if{html}{\out{</div>}}
}
\subsection{Returns}{
A TableHandle referencing the new table.
}
}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-TableHandle-percentile_by"></a>}}
\if{latex}{\out{\hypertarget{method-TableHandle-percentile_by}{}}}
\subsection{Method \code{percentile_by()}}{
Creates a new table from this table, grouped by columns, with the "percentile" aggregate operation
applied to the remaining columns.
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{TableHandle$percentile_by(percentile, columns)}\if{html}{\out{</div>}}
}

\subsection{Arguments}{
\if{html}{\out{<div class="arguments">}}
\describe{
\item{\code{percentile}}{The designated percentile}

\item{\code{columns}}{Columns to group by.}
}
\if{html}{\out{</div>}}
}
\subsection{Returns}{
A TableHandle referencing the new table.
}
}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-TableHandle-count_by"></a>}}
\if{latex}{\out{\hypertarget{method-TableHandle-count_by}{}}}
\subsection{Method \code{count_by()}}{
Creates a new table from this table, grouped by columns, having a new column named by
`countByColumn` containing the size of each group.
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{TableHandle$count_by(count_by_column, columns)}\if{html}{\out{</div>}}
}

\subsection{Arguments}{
\if{html}{\out{<div class="arguments">}}
\describe{
\item{\code{count_by_column}}{Name of the output column.}

\item{\code{columns}}{Columns to group by.}
}
\if{html}{\out{</div>}}
}
\subsection{Returns}{
A TableHandle referencing the new table.
}
}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-TableHandle-head_by"></a>}}
\if{latex}{\out{\hypertarget{method-TableHandle-head_by}{}}}
\subsection{Method \code{head_by()}}{
Creates a new table from this table, grouped by columns, containing the first `n` rows of
each group.
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{TableHandle$head_by(n, columns)}\if{html}{\out{</div>}}
}

\subsection{Arguments}{
\if{html}{\out{<div class="arguments">}}
\describe{
\item{\code{n}}{Number of rows}

\item{\code{columns}}{Columns to group by.}
}
\if{html}{\out{</div>}}
}
\subsection{Returns}{
A TableHandle referencing the new table.
}
}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-TableHandle-tail_by"></a>}}
\if{latex}{\out{\hypertarget{method-TableHandle-tail_by}{}}}
\subsection{Method \code{tail_by()}}{
Creates a new table from this table, grouped by columns, containing the last `n` rows of
each group.
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{TableHandle$tail_by(n, columns)}\if{html}{\out{</div>}}
}

\subsection{Arguments}{
\if{html}{\out{<div class="arguments">}}
\describe{
\item{\code{n}}{Number of rows}

\item{\code{columns}}{Columns to group by.}
}
\if{html}{\out{</div>}}
}
\subsection{Returns}{
A TableHandle referencing the new table.
}
}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-TableHandle-cross_join"></a>}}
\if{latex}{\out{\hypertarget{method-TableHandle-cross_join}{}}}
\subsection{Method \code{cross_join()}}{
Creates a new table by cross joining this table with `rightSide`. The tables are joined by
the columns in `columnsToMatch`, and columns from `rightSide` are brought in and optionally
renamed by `columnsToAdd`. Example:
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{TableHandle$cross_join(right_side, columns_to_match, columns_to_add)}\if{html}{\out{</div>}}
}

\subsection{Arguments}{
\if{html}{\out{<div class="arguments">}}
\describe{
\item{\code{right_side}}{The table to join with this table}

\item{\code{columns_to_match}}{The columns to join on}

\item{\code{columns_to_add}}{The columns from the right side to add, and possibly rename.}
}
\if{html}{\out{</div>}}
}
\subsection{Returns}{
A TableHandle referencing the new table.
}
}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-TableHandle-natural_join"></a>}}
\if{latex}{\out{\hypertarget{method-TableHandle-natural_join}{}}}
\subsection{Method \code{natural_join()}}{
Creates a new table by natural joining this table with `rightSide`. The tables are joined by
the columns in `columnsToMatch`, and columns from `rightSide` are brought in and optionally
renamed by `columnsToAdd`. Example:
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{TableHandle$natural_join(right_side, columns_to_match, columns_to_add)}\if{html}{\out{</div>}}
}

\subsection{Arguments}{
\if{html}{\out{<div class="arguments">}}
\describe{
\item{\code{right_side}}{The table to join with this table}

\item{\code{columns_to_match}}{The columns to join on}

\item{\code{columns_to_add}}{The columns from the right side to add, and possibly rename.}
}
\if{html}{\out{</div>}}
}
\subsection{Returns}{
A TableHandle referencing the new table.
}
}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-TableHandle-exact_join"></a>}}
\if{latex}{\out{\hypertarget{method-TableHandle-exact_join}{}}}
\subsection{Method \code{exact_join()}}{
Creates a new table by exact joining this table with `rightSide`. The tables are joined by
the columns in `columnsToMatch`, and columns from `rightSide` are brought in and optionally
renamed by `columnsToAdd`. Example:
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{TableHandle$exact_join(right_side, columns_to_match, columns_to_add)}\if{html}{\out{</div>}}
}

\subsection{Arguments}{
\if{html}{\out{<div class="arguments">}}
\describe{
\item{\code{right_side}}{The table to join with this table}

\item{\code{columns_to_match}}{The columns to join on}

\item{\code{columns_to_add}}{The columns from the right side to add, and possibly rename.}
}
\if{html}{\out{</div>}}
}
\subsection{Returns}{
A TableHandle referencing the new table.
}
}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-TableHandle-head"></a>}}
\if{latex}{\out{\hypertarget{method-TableHandle-head}{}}}
\subsection{Method \code{head()}}{
Creates a new table from this table containing the first `n` rows of this table.
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{TableHandle$head(n)}\if{html}{\out{</div>}}
}

\subsection{Arguments}{
\if{html}{\out{<div class="arguments">}}
\describe{
\item{\code{n}}{Number of rows}
}
\if{html}{\out{</div>}}
}
\subsection{Returns}{
A TableHandle referencing the new table.
}
}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-TableHandle-tail"></a>}}
\if{latex}{\out{\hypertarget{method-TableHandle-tail}{}}}
\subsection{Method \code{tail()}}{
Creates a new table from this table containing the last `n` rows of this table.
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{TableHandle$tail(n)}\if{html}{\out{</div>}}
}

\subsection{Arguments}{
\if{html}{\out{<div class="arguments">}}
\describe{
\item{\code{n}}{Number of rows}
}
\if{html}{\out{</div>}}
}
\subsection{Returns}{
A TableHandle referencing the new table.
}
}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-TableHandle-ungroup"></a>}}
\if{latex}{\out{\hypertarget{method-TableHandle-ungroup}{}}}
\subsection{Method \code{ungroup()}}{
Creates a new table from this table with the column array data ungrouped. This is the inverse
of the by() const operation.
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{TableHandle$ungroup(null_fill, group_by_columns)}\if{html}{\out{</div>}}
}

\subsection{Arguments}{
\if{html}{\out{<div class="arguments">}}
\describe{
\item{\code{group_by_columns}}{Columns to ungroup.}
}
\if{html}{\out{</div>}}
}
\subsection{Returns}{
A TableHandle referencing the new table.
}
}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-TableHandle-sort"></a>}}
\if{latex}{\out{\hypertarget{method-TableHandle-sort}{}}}
\subsection{Method \code{sort()}}{
Creates a new table from this table, sorted by sortPairs.
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{TableHandle$sort(sorters)}\if{html}{\out{</div>}}
}

\subsection{Arguments}{
\if{html}{\out{<div class="arguments">}}
\describe{
\item{\code{sorters}}{A vector of Deephaven Sorter objects (either sort.asc or sort.desc) describing the sort.
Each Sorter accepts a column to sort, and whether the sort should consider to the value's regular or
absolute value when doing comparisons.}
}
\if{html}{\out{</div>}}
}
\subsection{Returns}{
A TableHandle referencing the new table.
}
}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-TableHandle-merge"></a>}}
\if{latex}{\out{\hypertarget{method-TableHandle-merge}{}}}
\subsection{Method \code{merge()}}{
Creates a new table by merging `sources` together. The tables are essentially stacked on top
of each other.
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{TableHandle$merge(key_column, sources)}\if{html}{\out{</div>}}
}

\subsection{Arguments}{
\if{html}{\out{<div class="arguments">}}
\describe{
\item{\code{sources}}{The tables to merge.}
}
\if{html}{\out{</div>}}
}
\subsection{Returns}{
A TableHandle referencing the new table.
}
}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-TableHandle-clone"></a>}}
\if{latex}{\out{\hypertarget{method-TableHandle-clone}{}}}
\subsection{Method \code{clone()}}{
The objects of this class are cloneable with this method.
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{TableHandle$clone(deep = FALSE)}\if{html}{\out{</div>}}
}

\subsection{Arguments}{
\if{html}{\out{<div class="arguments">}}
\describe{
\item{\code{deep}}{Whether to make a deep clone.}
}
\if{html}{\out{</div>}}
}
}
}
